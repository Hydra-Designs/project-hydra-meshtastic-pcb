name: Build and Release Artifacts

on:
  push:
    paths:
    - '*.properties'
#     - '*.yaml'
#     - '*.yml'
  workflow_dispatch:
  
jobs:
          
  Build-Full:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: INTI-CMNB/KiBot@v1
      with:
        config: jlcpcb.full.config.kibot.yaml
        dir: Full
        schema: 'meshtastic-diy.sch'
        board: 'meshtastic-diy.kicad_pcb'
    - name: Show artifacts # For diagnostics
      run: ls -lR 
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Full.zip
        path: Full

  Build-Core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Replace variant token
      run: sed -i 's/%variant/core/g' jlcpcb.variant.config.kibot.yaml
    - uses: INTI-CMNB/KiBot@v1
      with:
        config: jlcpcb.variant.config.kibot.yaml
        dir: variant
        schema: 'meshtastic-diy.sch'
        board: 'meshtastic-diy.kicad_pcb'
    - name: Show artifacts # For diagnostics
      run: ls -lR 
    - name: Zip variant artifacts
      run: zip NoPSRAM+NoAuto-Prog.zip ./variant/* -r --junk-paths
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NoPSRAM+NoAuto-Prog.zip
        path: ./
  
  Build-PSRAM:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Replace variant token
      run: sed -i 's/%variant/psram/g' jlcpcb.variant.config.kibot.yaml
    - uses: INTI-CMNB/KiBot@v1
      with:
        config: jlcpcb.variant.config.kibot.yaml
        dir: variant
        schema: 'meshtastic-diy.sch'
        board: 'meshtastic-diy.kicad_pcb'
    - name: Show artifacts # For diagnostics
      run: ls -lR 
    - name: Zip variant artifacts
      run: zip NoAuto-Prog.zip ./variant/* -r --junk-paths
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NoAuto-Prog.zip
        path: ./

  Build-AutoProg:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Replace variant token
      run: sed -i 's/%variant/autoprog/g' jlcpcb.variant.config.kibot.yaml
    - uses: INTI-CMNB/KiBot@v1
      with:
        config: jlcpcb.variant.config.kibot.yaml
        dir: variant
        schema: 'meshtastic-diy.sch'
        board: 'meshtastic-diy.kicad_pcb'
    - name: Show artifacts # For diagnostics
      run: ls -lR 
    - name: Zip variant artifacts
      run: zip NoPSRAM.zip ./variant/* -r --junk-paths
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NoPSRAM.zip
        path: ./  
    
  Release-Artifacts:
    name: Release Artifacts
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    needs: [Build-Full, Build-Core, Build-PSRAM, Build-AutoProg]
    steps:
      - uses: actions/checkout@v1
      - name: Set Major Version
        id: major_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './version.properties'
          property: 'MAJOR'
          
      - name: Set Minor Version
        id: minor_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './version.properties'
          property: 'MINOR'
          
      - name: Set Release Version
        id: set_release_version
        run: echo ::set-env name=RELEASE_VERSION::${{ steps.major_version.outputs.value }}.${{ steps.minor_version.outputs.value }}
        
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Download core
        id: download_core
        uses: actions/download-artifact@master
        with:
          name: NoPSRAM+NoAuto-Prog.zip
          path: ./

      - name: Download No PSRAM
        id: download_no_psram
        uses: actions/download-artifact@master
        with:
          name: NoPSRAM.zip
          path: ./

      - name: Download No Auto-prog
        id: download_no_auto_prog
        uses: actions/download-artifact@master
        with:
          name: NoAuto-Prog.zip
          path: ./
      
      - name: Download full
        id: download_full
        uses: actions/download-artifact@master
        with:
          name: Full.zip
          path: ./

      - name: Show artifacts # For diagnostics
        run: ls -lR 
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: true

      - name: Upload Release BoM
        id: upload-release-bom 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./meshtastic-diy_bom_jlc.csv
          asset_name: BoM-JLCPCB.${{ env.RELEASE_VERSION }}.csv
          asset_content_type: text/csv

      - name: Upload Release CPL
        id: upload-release-cpl 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./meshtastic-diy_cpl_jlc.csv
          asset_name: CPL-JLCPCB.${{ env.RELEASE_VERSION }}.csv
          asset_content_type: text/csv

      - name: Upload Release iBoM
        id: upload-release-ibom 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./meshtastic-diy-ibom.html
          asset_name: Interactive-BoM.${{ env.RELEASE_VERSION }}.html
          asset_content_type: text/html

      - name: Upload Release Gerber
        id: upload-release-gerber 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./JLCPCB/meshtastic-diy-JLCPCB.zip
          asset_name: Gerber-JLCPCB.${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
          
      # SCHEMATIC 

      - name: Upload Release Schematic
        id: upload-release-schematic
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Schematic.pdf
          asset_name: Schematic.${{ env.RELEASE_VERSION }}.pdf
          asset_content_type: application/pdf
      
      # RENDERS
      - name: Upload Release SVG
        id: upload-release-svh
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PCB.svg
          asset_name: PCB.${{ env.RELEASE_VERSION }}.svg
          asset_content_type: text/xml
        
      - name: Upload Release STP
        id: upload-release-stp 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PCB-Model.stp
          asset_name: PCB-Model.${{ env.RELEASE_VERSION }}.stp
          asset_content_type: application/octet-stream
          
      - name: Upload Release Board Render Top
        id: upload-release-render-top 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PCB-Top.jpg
          asset_name: PCB-Top.${{ env.RELEASE_VERSION }}.jpg
          asset_content_type: image/jpeg
          
      - name: Upload Release Board Render Bottom
        id: upload-release-render-bottom 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PCB-Bottom.jpg
          asset_name: PCB-Bottom.${{ env.RELEASE_VERSION }}.jpg
          asset_content_type: image/jpeg

      - name: Upload Core
        id: upload-release-core 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NoPSRAM+NoAuto-Prog.zip
          asset_name: NoPSRAM+NoAuto-Prog.${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
      
      - name: Upload No PSRAM
        id: upload-release-no-psram 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NoPSRAM.zip
          asset_name: NoPSRAM.${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
      
      - name: Upload No Auto-prog
        id: upload-release-no-auto-prog 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NoAuto-Prog.zip
          asset_name: NoAuto-Prog.${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
